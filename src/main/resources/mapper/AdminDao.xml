<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingja.springmvc.dao.AdminDao">
    <!--namespace :对应的接口类-->
    <!--select :对应的接口类的方法-->
    <!--parameterType :对应的接口类的参数类型-->
    <!--resultType :对应的接口类的返回类型-->

    <select id="getAdminArticlesByPage" resultType="com.kingja.springmvc.entity.Article">
      select  article.id,article.top,category.name, article.title, article.content, article.readCount, article.commentCount, article.author,
      article.createTime, article.updateTime FROM article
      LEFT JOIN category
      ON article.categoryId=category.id
      WHERE article.display=1
      ORDER BY top DESC ,createTime DESC
      limit #{startRow},#{pageSize}
    </select>


    <select id="getAdminArticles" resultType="com.kingja.springmvc.entity.Article">
       select  article.id,article.top,category.name  AS category, article.title, article.content, article.readCount, article.commentCount, article.author,
        article.createTime, article.updateTime FROM article
        LEFT JOIN category
        ON article.categoryId=category.id
        WHERE article.display=1
        ORDER BY top DESC ,createTime DESC
    </select>

    <select id="getAdminArticlesByDate" resultType="com.kingja.springmvc.entity.Article">
       select  article.id,article.top,category.name  AS category, article.title, article.content, article.readCount, article.commentCount, article.author,
        article.createTime, article.updateTime FROM article
        LEFT JOIN category
        ON article.categoryId=category.id
        WHERE article.display=1
        AND left(article.createTime, 7)=#{publishDate}
        ORDER BY top DESC ,createTime DESC
    </select>

    <select id="getAdminArticlesByCategory" resultType="com.kingja.springmvc.entity.Article">
       select  article.id,article.top,category.name  AS category, article.title, article.content, article.readCount, article.commentCount, article.author,
        article.createTime, article.updateTime FROM article
        LEFT JOIN category
        ON article.categoryId=category.id
        WHERE article.display=1
        AND category.id=#{categoryId}
        ORDER BY top DESC ,createTime DESC
    </select>

    <select id="getDraftsArticles" resultType="com.kingja.springmvc.entity.Article">
        select  article.id,article.top,category.name  AS category, article.title, article.content, article.readCount, article.commentCount, article.author,
        article.createTime, article.updateTime FROM article
        LEFT JOIN category
        ON article.categoryId=category.id
        WHERE article.display=0
        ORDER BY top DESC,createTime DESC
    </select>

    <select id="getAdminCategorys" resultType="com.kingja.springmvc.entity.Category">
        SELECT category.id,category.name,category.createTime,count(article.title)  AS count
        FROM category
        LEFT JOIN article ON article.categoryId = category.id
        GROUP BY category.id
        ORDER BY createTime DESC
    </select>

    <select id="getCategorys" resultType="com.kingja.springmvc.entity.Category">
        SELECT id,name from category
        WHERE name !="" AND
        ORDER BY createTime DESC

    </select>

    <select id="getAccount" resultType="com.kingja.springmvc.entity.User">
        SELECT id,name,role,createTime from user
        ORDER BY createTime DESC
    </select>

    <select id="getComment" resultType="com.kingja.springmvc.entity.Comment">
      select article.title,`comment`.`name`,`comment`.content,`comment`.createTime,`comment`.id
FROM `comment`
LEFT JOIN article
ON `comment`.articleId=article.id
ORDER BY
`comment`.createTime DESC
    </select>

    <insert id="addCategory">
        INSERT INTO category (name) VALUES (#{name})
    </insert>
    <delete id="deleteCategory">
       DELETE FROM category WHERE id =#{id}
    </delete>
    <update id="editCategory">
       UPDATE category SET name=#{name} WHERE id =#{id}
    </update>


</mapper>